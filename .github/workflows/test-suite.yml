name: Comprehensive Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run regression tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  content-validation:
    name: Content Validation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Validate content structure
      run: npm run validate-content
    
    - name: Upload content validation results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: content-validation-results
        path: src/data/content-index.json

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [content-validation]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests with coverage
      run: npm run test:coverage
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: coverage/

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: [content-validation]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run accessibility tests
      run: npm run test:accessibility

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [content-validation]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Build project
      run: npm run build
    
    - name: Run E2E tests (preview server)
      run: npm run test:e2e
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [content-validation]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Start preview server
      run: npm run preview &
      
    - name: Wait for server
      run: npx wait-on http://localhost:4321
    
    - name: Run Lighthouse tests
      run: npm run test:performance
    
    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results
        path: lighthouse-results.json

  cross-browser-tests:
    name: Cross-Browser Tests
    runs-on: ${{ matrix.os }}
    needs: [content-validation]
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        browser: [chromium, firefox, webkit]
        exclude:
          # WebKit is not supported on Windows/Linux in Playwright
          - os: ubuntu-latest
            browser: webkit
          - os: windows-latest
            browser: webkit
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
    
    - name: Build project
      run: npm run build
    
    - name: Run cross-browser tests
      run: npx playwright test --project=${{ matrix.browser }} --retries=2

  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    needs: [unit-tests, accessibility-tests, e2e-tests, performance-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Build project
      run: npm run build
    
    - name: Start dev server
      run: npm run dev &
      
    - name: Wait for server
      run: npx wait-on http://localhost:4321
    
    - name: Run regression test suite
      run: node tests/regression/regression-suite.js
    
    - name: Upload regression report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: regression-report
        path: |
          regression-report.json
          regression-screenshots/

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [content-validation, unit-tests, accessibility-tests, e2e-tests, performance-tests, cross-browser-tests]
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate test summary
      run: |
        echo "## ðŸ§ª Test Suite Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Requirements Coverage" >> $GITHUB_STEP_SUMMARY
        echo "- **4.2**: Form validation and interactive components âœ…" >> $GITHUB_STEP_SUMMARY
        echo "- **4.3**: Contact form functionality and spam protection âœ…" >> $GITHUB_STEP_SUMMARY  
        echo "- **5.1**: Performance optimization and loading times âœ…" >> $GITHUB_STEP_SUMMARY
        echo "- **5.4**: Accessibility compliance and keyboard navigation âœ…" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- Unit Tests: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Accessibility Tests: ${{ needs.accessibility-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- E2E Tests: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Performance Tests: ${{ needs.performance-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Cross-Browser Tests: ${{ needs.cross-browser-tests.result }}" >> $GITHUB_STEP_SUMMARY