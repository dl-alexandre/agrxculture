---
import BaseLayout from '../layouts/BaseLayout.astro';
import ProjectCard from '../components/ProjectCard.astro';
import ProjectFilters from '../components/ProjectFilters.astro';
import ProjectModal from '../components/ProjectModal.astro';
import TestimonialsSection from '../components/TestimonialsSection.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import RelatedContent from '../components/RelatedContent.astro';
import { generateShowcasePageSEO } from '../utils/project-seo.ts';

// Load project data from Markdown content
import { loadProjects } from '../utils/content-loader.ts';
const projectsData = loadProjects();

// SEO configuration
const siteUrl =
  Astro.site?.toString().replace(/\/$/, '') || 'https://agrxculture.com';
const { structuredData, breadcrumbs } = generateShowcasePageSEO(siteUrl);

const seoConfig = {
  title: 'Project Showcase | Agricultural IoT & Farm Apps',
  description:
    'Explore agricultural tech case studies: IoT sensor networks, mobile farm apps, irrigation automation, and yield analytics delivering measurable results.',

  keywords: [
    'agricultural technology projects',
    'farm management case studies',
    'agricultural IoT examples',
    'precision agriculture portfolio',
    'farm automation projects',
    'agricultural software examples',
  ],
};
---

<BaseLayout
  pageType="showcase"
  title={seoConfig.title}
  description={seoConfig.description}
  canonical="https://agrxculture.com/showcase"
  structuredData={structuredData}
  breadcrumbs={breadcrumbs}
>
  <div class="page-container">
    <section class="page-header">
      <div class="container">
        <Breadcrumbs
          items={[
            { label: 'Home', url: '/' },
            { label: 'Showcase', url: '/showcase', current: true },
          ]}
        />

        <h1>Project Showcase</h1>
        <p class="page-subtitle">
          Explore Agrxculture's portfolio of agricultural technology solutions
          that help farmers increase efficiency, reduce costs, and improve crop
          yields through innovative software.
        </p>
      </div>
    </section>

    <section class="showcase-content">
      <div class="container">
        <!-- Project Filters -->
        <ProjectFilters />

        <!-- Project Grid -->
        <div class="project-grid">
          {projectsData.map(project => <ProjectCard project={project} />)}
        </div>

        <!-- No Results Message (hidden by default, shown by JavaScript) -->
        <div class="no-results-message" style="display: none;">
          <div class="no-results-content">
            <h3>No projects found</h3>
            <p>Try adjusting your filters to see more projects.</p>
            <button
              class="btn btn-primary"
              onclick="projectShowcase.clearAllFilters()"
            >
              Clear All Filters
            </button>
          </div>
        </div>
      </div>
    </section>

    <!-- Related Content Section -->
    <RelatedContent
      title="Explore Our Agricultural Technology Services"
      items={[
        {
          title: 'IoT Integration Services',
          description:
            'Custom IoT solutions for agricultural monitoring and automation',
          url: '/services#service-iot-integration',
          type: 'service',
        },
        {
          title: 'Mobile Farm Apps',
          description:
            'Native mobile applications for farm operations management',
          url: '/services#service-mobile-apps',
          type: 'service',
        },
        {
          title: 'Data Analytics Solutions',
          description: 'Data-driven insights for agricultural decision making',
          url: '/services#service-data-analytics',
          type: 'service',
        },
      ]}
    />

    <!-- Client Testimonials -->
    <TestimonialsSection title="Success Stories from Our Clients" limit={3} />

    <!-- Call to Action Section -->
    <section class="cta-section">
      <div class="container">
        <div class="cta-content">
          <h2>Ready to Build Your Agricultural Solution?</h2>
          <p>
            Let's discuss how Agrxculture can help you develop custom technology
            solutions that address your specific farming challenges and goals.
          </p>
          <a
            href={`${import.meta.env.BASE_URL.replace(/\/$/, '')}/contact/`}
            class="btn btn-primary btn-lg"
          >
            Start Your Project
          </a>
        </div>
      </div>
    </section>
  </div>

  <!-- Project Modal -->
  <ProjectModal />

  <!-- JavaScript for filtering and modal functionality -->
  <script define:vars={{ projectsData }}>
    // Project showcase functionality
    class ProjectShowcase {
      constructor() {
        this.projects = [];
        this.filteredProjects = [];
        this.currentFilter = 'all';
        this.showFeaturedOnly = false;
        this.currentSort = 'date-desc';

        this.init();
      }

      async init() {
        try {
          // Use the projects data passed from Astro
          this.projects = projectsData || [];
          this.filteredProjects = [...this.projects];

          this.setupEventListeners();
          this.updateDisplay();
          this.updateProjectCount();
        } catch (error) {
          console.error('Failed to initialize projects:', error);
        }
      }

      setupEventListeners() {
        // Filter buttons
        const filterButtons = document.querySelectorAll('.filter-btn');
        filterButtons.forEach(btn => {
          btn.addEventListener('click', e => {
            this.handleFilterChange(e.target.dataset.filter);
          });
        });

        // Featured toggle
        const featuredToggle = document.getElementById('featured-toggle');
        if (featuredToggle) {
          featuredToggle.addEventListener('change', e => {
            this.showFeaturedOnly = e.target.checked;
            this.applyFilters();
          });
        }

        // Sort select
        const sortSelect = document.getElementById('sort-select');
        if (sortSelect) {
          sortSelect.addEventListener('change', e => {
            this.currentSort = e.target.value;
            this.applySorting();
          });
        }

        // Clear filters button
        const clearFiltersBtn = document.getElementById('clear-filters');
        if (clearFiltersBtn) {
          clearFiltersBtn.addEventListener('click', () => {
            this.clearAllFilters();
          });
        }

        // Case study modal buttons
        const caseStudyButtons = document.querySelectorAll('.case-study-btn');
        caseStudyButtons.forEach(btn => {
          btn.addEventListener('click', e => {
            const projectId = e.target.dataset.projectId;
            this.openCaseStudyModal(projectId);
          });
        });

        // Modal close functionality
        this.setupModalEventListeners();

        // Keyboard navigation
        document.addEventListener('keydown', e => {
          if (e.key === 'Escape') {
            this.closeCaseStudyModal();
          }
        });
      }

      setupModalEventListeners() {
        const modal = document.getElementById('project-modal');
        const closeBtn = modal?.querySelector('.modal-close');

        if (closeBtn) {
          closeBtn.addEventListener('click', () => {
            this.closeCaseStudyModal();
          });
        }

        if (modal) {
          modal.addEventListener('click', e => {
            if (e.target === modal) {
              this.closeCaseStudyModal();
            }
          });
        }
      }

      handleFilterChange(filter) {
        // Update active filter button
        const filterButtons = document.querySelectorAll('.filter-btn');
        filterButtons.forEach(btn => {
          btn.classList.remove('active');
          btn.setAttribute('aria-pressed', 'false');
        });

        const activeBtn = document.querySelector(`[data-filter="${filter}"]`);
        if (activeBtn) {
          activeBtn.classList.add('active');
          activeBtn.setAttribute('aria-pressed', 'true');
        }

        this.currentFilter = filter;
        this.applyFilters();
      }

      applyFilters() {
        this.filteredProjects = this.projects.filter(project => {
          // Filter by tag
          const matchesTag =
            this.currentFilter === 'all' ||
            project.tags.some(tag => tag.toLowerCase() === this.currentFilter);

          // Filter by featured status
          const matchesFeatured = !this.showFeaturedOnly || project.featured;

          return matchesTag && matchesFeatured;
        });

        this.applySorting();
        this.updateDisplay();
        this.updateProjectCount();
        this.updateActiveFilters();
      }

      applySorting() {
        this.filteredProjects.sort((a, b) => {
          switch (this.currentSort) {
            case 'date-desc':
              return new Date(b.dateCompleted) - new Date(a.dateCompleted);
            case 'date-asc':
              return new Date(a.dateCompleted) - new Date(b.dateCompleted);
            case 'title-asc':
              return a.title.localeCompare(b.title);
            case 'title-desc':
              return b.title.localeCompare(a.title);
            default:
              return 0;
          }
        });
      }

      updateDisplay() {
        const projectGrid = document.querySelector('.project-grid');
        if (!projectGrid) return;

        // Hide all project cards first
        const allCards = document.querySelectorAll('.project-card');
        allCards.forEach(card => {
          card.style.display = 'none';
        });

        // Show filtered projects
        this.filteredProjects.forEach(project => {
          const card = document
            .querySelector(`[data-project-id="${project.id}"]`)
            ?.closest('.project-card');
          if (card) {
            card.style.display = 'block';
          }
        });

        // Show no results message if needed
        this.updateNoResultsMessage();
      }

      updateNoResultsMessage() {
        const projectGrid = document.querySelector('.project-grid');
        if (!projectGrid) return;

        let noResultsMsg = document.querySelector('.no-results-message');

        if (this.filteredProjects.length === 0) {
          if (noResultsMsg) {
            noResultsMsg.style.display = 'block';
          }
        } else if (noResultsMsg) {
          noResultsMsg.style.display = 'none';
        }
      }

      updateProjectCount() {
        const countElement = document.getElementById('project-count');
        if (countElement) {
          const total = this.projects.length;
          const filtered = this.filteredProjects.length;
          countElement.textContent =
            filtered === total
              ? `${total} projects`
              : `${filtered} of ${total} projects`;
        }
      }

      updateActiveFilters() {
        const activeFiltersContainer =
          document.getElementById('active-filter-tags');
        const clearFiltersBtn = document.getElementById('clear-filters');

        if (!activeFiltersContainer) return;

        const filters = [];

        if (this.currentFilter !== 'all') {
          filters.push(
            this.currentFilter.charAt(0).toUpperCase() +
              this.currentFilter.slice(1)
          );
        }

        if (this.showFeaturedOnly) {
          filters.push('Featured Only');
        }

        if (filters.length === 0) {
          activeFiltersContainer.innerHTML =
            '<span class="active-filter-tag">All Projects</span>';
          if (clearFiltersBtn) clearFiltersBtn.style.display = 'none';
        } else {
          activeFiltersContainer.innerHTML = filters
            .map(filter => `<span class="active-filter-tag">${filter}</span>`)
            .join('');
          if (clearFiltersBtn) clearFiltersBtn.style.display = 'inline-block';
        }
      }

      clearAllFilters() {
        // Reset filter state
        this.currentFilter = 'all';
        this.showFeaturedOnly = false;
        this.currentSort = 'date-desc';

        // Reset UI elements
        const filterButtons = document.querySelectorAll('.filter-btn');
        filterButtons.forEach(btn => {
          btn.classList.remove('active');
          btn.setAttribute('aria-pressed', 'false');
        });

        const allBtn = document.querySelector('[data-filter="all"]');
        if (allBtn) {
          allBtn.classList.add('active');
          allBtn.setAttribute('aria-pressed', 'true');
        }

        const featuredToggle = document.getElementById('featured-toggle');
        if (featuredToggle) {
          featuredToggle.checked = false;
        }

        const sortSelect = document.getElementById('sort-select');
        if (sortSelect) {
          sortSelect.value = 'date-desc';
        }

        // Apply filters
        this.applyFilters();
      }

      openCaseStudyModal(projectId) {
        const project = this.projects.find(p => p.id === projectId);
        if (!project) return;

        const modal = document.getElementById('project-modal');
        if (!modal) return;

        // Populate modal content
        this.populateModalContent(project);

        // Show modal
        modal.classList.add('active');
        modal.setAttribute('aria-hidden', 'false');

        // Focus management
        const closeBtn = modal.querySelector('.modal-close');
        if (closeBtn) {
          closeBtn.focus();
        }

        // Prevent body scroll
        document.body.style.overflow = 'hidden';
      }

      populateModalContent(project) {
        const modal = document.getElementById('project-modal');
        if (!modal) return;

        // Basic info
        modal.querySelector('#modal-title').textContent = project.title;
        modal.querySelector('#modal-image').src = project.image;
        modal.querySelector('#modal-image').alt =
          `Screenshot of ${project.title}`;

        // Case study content
        modal.querySelector('#modal-problem').textContent =
          project.caseStudy.problem;
        modal.querySelector('#modal-solution').textContent =
          project.caseStudy.solution;
        modal.querySelector('#modal-outcome').textContent =
          project.caseStudy.outcome;

        // Metrics
        modal.querySelector('#modal-improvement').textContent =
          project.metrics.improvement;
        modal.querySelector('#modal-timeline').textContent =
          project.metrics.timeline;
        modal.querySelector('#modal-scale').textContent = project.metrics.scale;

        // Technologies
        const techList = modal.querySelector('#modal-tech-list');
        techList.innerHTML = project.technologies
          .map(tech => `<span class="tech-badge">${tech}</span>`)
          .join('');

        // Links
        const demoLink = modal.querySelector('#modal-demo-link');
        const githubLink = modal.querySelector('#modal-github-link');
        const pdfLink = modal.querySelector('#modal-pdf-link');

        if (project.links.demo) {
          demoLink.href = project.links.demo;
          demoLink.style.display = 'inline-block';
        } else {
          demoLink.style.display = 'none';
        }

        if (project.links.github) {
          githubLink.href = project.links.github;
          githubLink.style.display = 'inline-block';
        } else {
          githubLink.style.display = 'none';
        }

        if (project.caseStudy.pdfDownload) {
          pdfLink.href = project.caseStudy.pdfDownload;
          pdfLink.style.display = 'inline-block';
        } else {
          pdfLink.style.display = 'none';
        }
      }

      closeCaseStudyModal() {
        const modal = document.getElementById('project-modal');
        if (!modal) return;

        modal.classList.remove('active');
        modal.setAttribute('aria-hidden', 'true');

        // Restore body scroll
        document.body.style.overflow = '';
      }
    }

    // Initialize when DOM is loaded
    document.addEventListener('DOMContentLoaded', () => {
      window.projectShowcase = new ProjectShowcase();
    });
  </script>
</BaseLayout>

<style>
  .page-container {
    min-height: 100vh;
  }

  .page-header {
    padding: var(--space-3xl) 0 var(--space-2xl);
    text-align: center;
    background: linear-gradient(
      135deg,
      var(--color-primary-light) 0%,
      var(--color-background) 100%
    );
  }

  .container {
    max-width: var(--container-lg);
    margin: 0 auto;
    padding: 0 var(--space-md);
  }

  h1 {
    color: var(--color-primary);
    font-size: var(--font-size-4xl);
    font-weight: 700;
    margin-bottom: var(--space-md);
    line-height: 1.2;
  }

  .page-subtitle {
    font-size: var(--font-size-lg);
    color: var(--color-text-secondary);
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
  }

  .showcase-content {
    padding: var(--space-2xl) 0;
  }

  .project-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: var(--space-xl);
    margin-bottom: var(--space-2xl);
  }

  /* Fix layout shift by ensuring consistent card dimensions */
  .project-card {
    min-height: 500px;
    display: flex;
    flex-direction: column;
    background: var(--color-surface);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-sm);
    transition: all var(--transition-normal);
    overflow: hidden;
    position: relative;
  }

  .project-card:hover {
    box-shadow: var(--shadow-lg);
    transform: translateY(-2px);
  }

  /* Ensure consistent image container dimensions */
  .project-image-container {
    width: 100%;
    height: 200px;
    overflow: hidden;
    background: var(--color-surface-variant);
    position: relative;
  }

  /* Improve contrast for better accessibility */
  .project-title {
    color: var(--color-text-primary);
    font-weight: 600;
    font-size: var(--font-size-lg);
    margin-bottom: var(--space-sm);
    line-height: 1.3;
  }

  .project-category {
    color: var(--color-primary);
    font-size: var(--font-size-sm);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    background: var(--color-primary-light);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--border-radius-sm);
    display: inline-block;
    margin-bottom: var(--space-md);
  }

  .project-description {
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin-bottom: var(--space-md);
    flex-grow: 1;
  }

  /* Enhanced keyboard navigation focus states */
  .project-card:focus-within {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .case-study-btn:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
    background: var(--color-primary-dark);
  }

  /* Improve contrast for tech badges */
  .tech-badge {
    background: var(--color-surface-variant);
    color: var(--color-text-primary);
    border: 1px solid var(--color-outline);
    font-weight: 500;
  }

  /* Improve contrast for tag badges */
  .tag-badge {
    background: var(--color-secondary-light);
    color: var(--color-text-on-secondary);
    font-weight: 500;
  }

  .no-results-message {
    text-align: center;
    padding: var(--space-3xl) var(--space-lg);
    background: var(--color-surface);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-sm);
  }

  .no-results-content h3 {
    font-size: var(--font-size-2xl);
    color: var(--color-text-primary);
    margin-bottom: var(--space-md);
  }

  .no-results-content p {
    color: var(--color-text-secondary);
    margin-bottom: var(--space-lg);
    font-size: var(--font-size-md);
  }

  .cta-section {
    background: var(--color-primary);
    color: white;
    padding: var(--space-3xl) 0;
    text-align: center;
  }

  .cta-content h2 {
    font-size: var(--font-size-3xl);
    font-weight: 600;
    margin-bottom: var(--space-md);
  }

  .cta-content p {
    font-size: var(--font-size-lg);
    opacity: 0.9;
    max-width: 600px;
    margin: 0 auto var(--space-xl);
    line-height: 1.6;
  }

  .btn-lg {
    padding: var(--space-md) var(--space-xl);
    font-size: var(--font-size-lg);
  }

  /* Task 8 Responsive Design Enhancements */

  /* Low-end mobile (max-width: 479px) */
  @media (max-width: 479px) {
    .container {
      padding: 0 var(--space-sm);
    }

    .page-header {
      padding: var(--space-xl) 0 var(--space-lg);
    }

    h1 {
      font-size: var(--font-size-2xl);
    }

    .page-subtitle {
      font-size: var(--font-size-sm);
    }

    .project-grid {
      grid-template-columns: 1fr;
      gap: var(--space-md);
    }

    .showcase-content {
      padding: var(--space-lg) 0;
    }

    .no-results-message {
      padding: var(--space-lg) var(--space-sm);
    }

    .cta-section {
      padding: var(--space-xl) 0;
    }

    .cta-content h2 {
      font-size: var(--font-size-xl);
    }

    .cta-content p {
      font-size: var(--font-size-sm);
    }

    .btn-lg {
      padding: var(--space-sm) var(--space-lg);
      font-size: var(--font-size-base);
      width: 100%;
      min-height: var(--touch-target-comfortable);
    }
  }

  /* Standard mobile (480px to 767px) */
  @media (min-width: 480px) and (max-width: 767px) {
    .page-header {
      padding: var(--space-2xl) 0 var(--space-xl);
    }

    h1 {
      font-size: var(--font-size-3xl);
    }

    .page-subtitle {
      font-size: var(--font-size-base);
    }

    .project-grid {
      grid-template-columns: 1fr;
      gap: var(--space-lg);
    }

    .showcase-content {
      padding: var(--space-xl) 0;
    }

    .cta-section {
      padding: var(--space-2xl) 0;
    }

    .cta-content h2 {
      font-size: var(--font-size-2xl);
    }

    .cta-content p {
      font-size: var(--font-size-base);
    }

    .btn-lg {
      min-height: var(--touch-target-comfortable);
    }
  }

  /* Tablet (768px to 1023px) */
  @media (min-width: 768px) and (max-width: 1023px) {
    .project-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--space-xl);
    }
  }

  /* Desktop (1024px and above) */
  @media (min-width: 1024px) {
    .project-grid {
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    }
  }

  /* Animation for project cards */
  .project-card {
    animation: fadeInUp 0.6s ease-out forwards;
    opacity: 0;
    transform: translateY(20px);
  }

  .project-card:nth-child(1) {
    animation-delay: 0.1s;
  }
  .project-card:nth-child(2) {
    animation-delay: 0.2s;
  }
  .project-card:nth-child(3) {
    animation-delay: 0.3s;
  }
  .project-card:nth-child(4) {
    animation-delay: 0.4s;
  }
  .project-card:nth-child(5) {
    animation-delay: 0.5s;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Respect reduced motion preference */
  @media (prefers-reduced-motion: reduce) {
    .project-card {
      animation: none;
      opacity: 1;
      transform: none;
    }
  }
</style>
