name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Astro site
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  test:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./dist-artifact

      - name: Extract build artifacts
        run: |
          cd dist-artifact
          tar -xf artifact.tar
          mv * ../dist/ || true

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: Run Lighthouse CI
        run: |
          lhci autorun --upload.target=temporary-public-storage --collect.staticDistDir=./dist
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Check for broken links
        run: |
          npx broken-link-checker http://localhost:3000 --recursive --ordered --exclude-external
        continue-on-error: true

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  verify-deployment:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for deployment
        run: sleep 30

      - name: Verify deployment with Lighthouse
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun --collect.url="${{ steps.deployment.outputs.page_url }}" --upload.target=temporary-public-storage
        continue-on-error: true

      - name: Check deployed site for broken links
        run: |
          npx broken-link-checker "${{ steps.deployment.outputs.page_url }}" --recursive --ordered --exclude-external
        continue-on-error: true

      - name: Revert on failure
        if: failure()
        run: |
          echo "Deployment verification failed. Initiating automatic rollback..."
          node scripts/rollback-deployment.js "Deployment verification failed"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}