---
export interface RelatedItem {
  title: string;
  description: string;
  url: string;
  type: 'service' | 'project' | 'page';
  image?: string;
}

interface Props {
  title: string;
  items: RelatedItem[];
  maxItems?: number;
}

const { title, items, maxItems = 3 } = Astro.props;
const displayItems = items.slice(0, maxItems);
---

<section class="related-content" aria-labelledby="related-content-title">
  <div class="container">
    <h2 id="related-content-title" class="related-content-title">{title}</h2>

    <div class="related-content-grid">
      {
        displayItems.map(item => (
          <article class="related-item">
            <a href={item.url} class="related-item-link">
              <div class="related-item-content">
                <div class="related-item-type">{item.type}</div>
                <h3 class="related-item-title">{item.title}</h3>
                <p class="related-item-description">{item.description}</p>

                <div class="related-item-arrow">
                  <svg aria-hidden="true" viewBox="0 0 24 24">
                    <path
                      d="M9 18l6-6-6-6"
                      stroke="currentColor"
                      stroke-width="2"
                      fill="none"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    />
                  </svg>
                </div>
              </div>
            </a>
          </article>
        ))
      }
    </div>
  </div>
</section>

<style>
  .related-content {
    margin: 4rem 0;
    padding: 2rem 0;
    background: #f8f9fa;
  }

  .related-content-title {
    text-align: center;
    margin-bottom: 2rem;
    color: #2e7d32;
    font-size: 1.75rem;
  }

  .related-content-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .related-item {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease;
  }

  .related-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  .related-item-link {
    display: block;
    text-decoration: none;
    color: inherit;
    height: 100%;
  }

  .related-item-image {
    height: 200px;
    overflow: hidden;
  }

  .related-item-content {
    padding: 1.5rem;
    position: relative;
  }

  .related-item-type {
    display: inline-block;
    background: #2e7d32;
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.75rem;
    text-transform: uppercase;
    font-weight: 600;
    margin-bottom: 0.75rem;
  }

  .related-item-title {
    font-size: 1.25rem;
    margin: 0 0 0.5rem 0;
    color: #2e7d32;
    line-height: 1.3;
  }

  .related-item-description {
    color: #666;
    line-height: 1.5;
    margin: 0;
  }

  .related-item-arrow {
    position: absolute;
    top: 1.5rem;
    right: 1.5rem;
    color: #2e7d32;
    opacity: 0;
    transition: opacity 0.2s ease;
  }

  .related-item:hover .related-item-arrow {
    opacity: 1;
  }

  .related-item-arrow svg {
    width: 20px;
    height: 20px;
  }

  @media (max-width: 768px) {
    .related-content {
      margin: 2rem 0;
      padding: 1rem 0;
    }

    .related-content-title {
      font-size: 1.5rem;
      margin-bottom: 1.5rem;
    }

    .related-content-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .related-item-content {
      padding: 1rem;
    }
  }
</style>
