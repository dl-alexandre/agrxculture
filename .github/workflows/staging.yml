name: Staging Environment

on:
  push:
    branches: [develop, staging]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'staging-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  build-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Astro site for staging
        run: |
          npm run build
        env:
          NODE_ENV: staging

      - name: Upload staging artifacts
        uses: actions/upload-artifact@v4
        with:
          name: staging-build
          path: ./dist
          retention-days: 7

  test-staging:
    runs-on: ubuntu-latest
    needs: build-staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download staging artifacts
        uses: actions/download-artifact@v4
        with:
          name: staging-build
          path: ./dist

      - name: Start local server
        run: |
          npx serve dist -l 3000 &
          sleep 5

      - name: Run Lighthouse on staging
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun --collect.url="http://localhost:3000" --upload.target=temporary-public-storage
        continue-on-error: true

      - name: Run accessibility tests
        run: |
          npx axe-core-cli http://localhost:3000 --exit
        continue-on-error: true

      - name: Check for broken links
        run: |
          npx broken-link-checker http://localhost:3000 --recursive --ordered --exclude-external
        continue-on-error: true

      - name: Run SEO validation
        run: |
          node scripts/validate-seo.js http://localhost:3000
        continue-on-error: true

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build-staging, test-staging]
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Download staging artifacts
        uses: actions/download-artifact@v4
        with:
          name: staging-build
          path: ./dist

      - name: Deploy to staging (Netlify)
        run: |
          npx netlify-cli deploy --dir=./dist --site=${{ secrets.NETLIFY_STAGING_SITE_ID }} --auth=${{ secrets.NETLIFY_AUTH_TOKEN }}
        continue-on-error: true
